---
# tasks file for cyber-test-range-target
- name: Cyber Test Range Target | Install Yum Security Plugin
  yum:
    name: yum-plugin-security
  when: ansible_distribution_major_version == 6

- name: Cyber Test Range Target | Ensure Custom Facts Directory Exists
  file:
    path: /etc/ansible/facts.d
    recurse: yes
    state: directory

- name: Cyber Test Range Target | Install Custom Fact Module for CVEs
  copy:
    src: cves.fact
    dest: /etc/ansible/facts.d/cves.fact
    mode: 0750
  notify: Cyber Test Range Target | Reload Local Facts

- name: Cyber Test Range Target | Install Custom Fact Module for CPE
  copy:
    src: cpe.fact
    dest: /etc/ansible/facts.d/cpe.fact
    mode: 0750
  notify: Cyber Test Range Target | Reload Local Facts

- name: Cyber Test Range Target | Install Custom Fact Module for Available Packages
  copy:
    src: available_packages.fact
    dest: /etc/ansible/facts.d/available_packages.fact
    mode: 0750
  notify: Cyber Test Range Target | Reload Local Facts

- name: Cyber Test Range Target | Flush Handlers
  meta: flush_handlers

- name: Cyber Test Range Target | Obtain CVE Information
  set_fact:
    cve: "{{ lookup('rhsecapi', item, validate_certs) }}"
  with_items: "{{ cves_to_test }}"
  register: cve_info

- name: Cyber Test Range Target | Build Package Information
  set_fact:
    package: "{{ item.1.package }}"
    cpe: "{{ item.1.cpe }}"
    cve: "{{ item.0.item }}"
    package_name: "{{ item.1.package | regex_search('([^-]+)') }}"
  with_subelements:
  - "{{ cve_info.results }}"
  - ansible_facts.cve.affected_release
  register: affected_releases
  when: item.1.package is defined
  loop_control:
    label: "{{ item.0.item }} - {{ item.1.cpe }}"

- name: Cyber Test Range Target | Set SELinux State
  selinux:
    policy: targeted
    state: "{{ selinux_state }}"

- name: Cyber Test Range Target | Install Git and Python Virtualenv
  yum:
    name:
    - python-virtualenv
    - git

- name: Cyber Test Range Target | Install Appropriate Packages Not Kernel
  yum:
    allow_downgrade: yes
    name: "{{ ansible_local.available_packages[item.ansible_facts.package]['downgrade'] }}"
  with_items: "{{ affected_releases.results }}"
  when: item.ansbile_facts is defined and (item.ansible_facts.cpe.startswith(ansible_local.cpe) and item.ansible_facts.cve not in ansible_local.cves and 'kernel' not in item.ansible_facts.package_name)
  loop_control:
    label: "{{ item._ansible_item_label }}"
  ignore_errors: yes

- name: Cyber Test Range Target | Install Different Kernel Version if Necessary
  yum:
    name: "{{ ansible_local.available_packages[item.ansible_facts.package]['downgrade'] }}"
  with_items: "{{ affected_releases.results }}"
  when: item.ansbile_facts is defined and item.ansible_facts.cpe.startswith(ansible_local.cpe) and item.ansible_facts.cve not in ansible_local.cves and 'kernel' in item.ansible_facts.package_name
  loop_control:
    label: "{{ item._ansible_item_label }}"
  register: kernel
  ignore_errors: yes

- name: Cyber Test Range Target | Set Fact for Changed Kernel
  set_fact:
    kernel_changed: "{{ kernel.changed }}"

- name: Cyber Test Range Target | Add Script to Remove Unecessary Kernels
  template:
    src: remove-kernels.sh.j2
    dest: /usr/local/bin/remove-kernels.sh
    mode: 0700
    owner: root
    group: root
  when: kernel_changed

- name: Cyber Test Range Target | Add One Time Service to Remove Kernels - EL 7
  copy:
    src: remove-kernels.service
    dest: /etc/systemd/system/remove-kernels.service
  when: kernel_changed and ansible_distribution_major_version == "7"

- name: Cyber Test Range Target | Enable One Time Service to Remove Kernels - EL 7
  systemd:
    name: remove-kernels.service
    daemon_reload: yes
    enabled: yes
  when: kernel_changed and ansible_distribution_major_version == "7"

- name: Cyber Test Range Target | Restart Host to Effect Kernel Change
  command: /sbin/shutdown -r +1
  async: 0
  poll: 0
  ignore_errors: true
  when: kernel_changed
